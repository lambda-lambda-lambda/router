{
  "openapi": "3.0.0",
  "info": {
    "title": "restfulApiHandler",
    "description": "Handler example with preconfigured routes and middleware.",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "paths": {
    "/api/example": {
      "get": {
        "description": "Example using `Route.index` handler alias.",
        "responses": {
          "200": {
            "description": "Returns JSON response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Public route"
        ]
      },
      "post": {
        "description": "Example using `Route.submit` handler alias.",
        "responses": {
          "200": {
            "description": "Returns JSON response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Public route"
        ]
      }
    },
    "/api/example/{resourceId}": {
      "put": {
        "description": "Example using `Route.create` handler alias.",
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "default": 123456,
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Returns JSON response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Public route"
        ]
      },
      "patch": {
        "description": "Example using `Route.update` handler alias.",
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "default": 123456,
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns JSON response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Public route"
        ]
      },
      "delete": {
        "description": "Example using `Route.delete` handler method.",
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "default": 123456,
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns JSON response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Public route"
        ]
      }
    },
    "/api/example/private": {
      "get": {
        "description": "Example using `Route.index` handler alias.",
        "responses": {
          "200": {
            "description": "Returns JSON response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": {
          "basicAuth": []
        },
        "tags": [
          "Protected route"
        ]
      },
      "post": {
        "description": "Example using `Route.submit` handler alias.",
        "responses": {
          "200": {
            "description": "Returns JSON response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Protected route"
        ],
        "security": {
          "basicAuth": []
        }
      }
    },
    "/api/example/private/{resourceId}": {
      "put": {
        "description": "Example using `Route.create` handler alias.",
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "default": 123456,
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Returns JSON response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": {
          "basicAuth": []
        },
        "tags": [
          "Protected route"
        ]
      },
      "patch": {
        "description": "Example using `Route.update` handler alias.",
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "default": 123456,
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns JSON response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": {
          "basicAuth": []
        },
        "tags": [
          "Protected route"
        ]
      },
      "delete": {
        "description": "Example using `Route.delete` handler method.",
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "default": 123456,
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns JSON response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Protected route"
        ],
        "security": {
          "basicAuth": []
        }
      }
    },
    "/api/example/private/image": {
      "get": {
        "description": "Example using `Route.index` handler alias.",
        "responses": {
          "200": {
            "description": "Returns binary string.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": {
          "basicAuth": []
        },
        "tags": [
          "Protected image"
        ]
      }
    }
  },
  "tags": []
}
